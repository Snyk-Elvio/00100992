apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    // A common library, might have transitive deps we want to control
    implementation 'com.google.guava:guava:31.1-jre'

    // Another library that might bring in unwanted dependencies
    implementation 'org.apache.commons:commons-text:1.10.0'

    // Example of excluding a specific transitive dependency
    implementation('org.springframework.boot:spring-boot-starter-web:3.1.0') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-annotations-api' // Exclude Tomcat annotations
    }

    // Example of excluding a dependency entirely (less common) -  Let's say we don't want slf4j-simple
    // configurations {
    //     implementation {
    //         exclude group: 'org.slf4j', module: 'slf4j-simple'
    //     }
    // }
    // implementation 'org.slf4j:slf4j-simple:2.0.7' // This would be ignored due to the exclusion above

    // Example: Force a specific version of a transitive dependency (if you have version conflicts)
    configurations.all {
        resolutionStrategy {
            force 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // Example: force Jackson version
        }
    }

    // Example: Exclude a dependency from a specific configuration (e.g., test)
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.9.3') {
        exclude group: 'org.apiguardian', module: 'apiguardian-api'
        exclude group: 'org.opentest4j', module: 'opentest4j'
        exclude group: 'net.bytebuddy', module: 'byte-buddy'

    }

    // Another dependency where we exclude a transitive dep
    implementation('com.squareup.okhttp3:okhttp:4.11.0') {
        exclude group: 'com.squareup.okio', module: 'okio' // Exclude Okio
    }


    // Example: Exclude a transitive dependency from ALL configurations
    configurations.all {
        exclude group: 'commons-collections', module: 'commons-collections' // Example: exclude commons-collections everywhere
    }
}


// Example sourceSets exclusion (for files, not dependencies)
sourceSets {
    main {
        java {
            exclude '**/UnusedClass.java' // Exclude a specific file
        }
    }
}